---
apiVersion: v1
kind: Namespace
metadata:
  name: django
  labels:
    name: django
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  namespace: django
  labels:
    app: django
spec:
  replicas: 5
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
      namespace: django
    spec:
      containers:
      - name: django
        image: quay.io/lagomes/django-example:latest
        imagePullPolicy: Always
        ports:
        - name: http-port
          containerPort: 8000
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"         

---
apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: django  
  labels:
    app: django
spec:
  type: ClusterIP
  selector:
    app: django
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8000
    protocol: TCP

---
apiVersion: v1
kind: Secret
metadata:
  name: django-tls
  namespace: django
  labels:
    app: django
type: kubernetes.io/tls
data:
  tls.crt: MIIDoTCCAokCFArLIMSWI9lOfrADTmNqj0C/5dqoMA0GCSqGSIb3DQEBCwUAMIGMMQswCQYDVQQGEwJCUjETMBEGA1UECAwKUGVybmFtYnVjbzEPMA0GA1UEBwwGUmVjaWZlMSYwJAYDVQQKDB1UcmlidW5hbCBSZWdpb25hbCBkYSA1IFJlZ2lhbzENMAsGA1UECgwEVFJGNTEgMB4GA1UEAwwXemFiYml4Lms4c2gudHJmNS5nb3YuYnIwHhcNMTkxMDAzMTcyNzA0WhcNMjIwNjI5MTcyNzA0WjCBjDELMAkGA1UEBhMCQlIxEzARBgNVBAgMClBlcm5hbWJ1Y28xDzANBgNVBAcMBlJlY2lmZTEmMCQGA1UECgwdVHJpYnVuYWwgUmVnaW9uYWwgZGEgNSBSZWdpYW8xDTALBgNVBAoMBFRSRjUxIDAeBgNVBAMMF3phYmJpeC5rOHNoLnRyZjUuZ292LmJyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5vwNn45KvsJwBkI4tcLum0/mbqpQLCSlCABKlPECdM3Z0t57waD25rKGurGcrQ1pS7X53nsS5tYscqvcbQvf+RvdBUoIgOrmXL+PRRW990mN+g3/Zcnd2z2eQd0KaQto3a27+7+a3CICPoxB6n6NmK16mXqJpPMR4dkmJnPoRFhI9yTg8UpNk2rdFeIf5/CmF0XEiQLx//iBbLa2wYW87Hfjlb/xDGCyVCJQv5ahc4L42i0Wh8cJms/qIWZi6rjoeMb8GUEo5H/4BfbDcN+nUjf9Q9yUQrfEYZV4vV9mEAamafEMBA86KZtL4cJrHkBk81B18U0TbMS3fC8KaJBxNQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCbNG3QXBObIWDiqHhlPpKOG+bTltOWKK9bWnkBs4EcNz0Hp5o1Q6zmITEmcE9bfzMeFlq+naYLimKtz79i7jDDOskKKeo6adTszdIEfEocbiOzPeXJ3PZoC9VjTlN+VzcNC7MQvBzYg/+cbVBoNB8siR2UCxyTtNeN81Y7OeCYHG9+/+kdlmea9VCG7keHijTOz7QLeYdPPP8xnMPF8T6ZbrfdNP5y06pymHAbOu/PBHJekhMHEqBFo2w1jhMWCSd3tXmyIwm27BogBNgsfQXrpXPVBCQGVHdIwL6hyY6+USLZpeyF+yRtdlSZOdEOF8tGIOajIOJlUerQzO277ehH
  tls.key: MIIEpQIBAAKCAQEA5vwNn45KvsJwBkI4tcLum0/mbqpQLCSlCABKlPECdM3Z0t57waD25rKGurGcrQ1pS7X53nsS5tYscqvcbQvf+RvdBUoIgOrmXL+PRRW990mN+g3/Zcnd2z2eQd0KaQto3a27+7+a3CICPoxB6n6NmK16mXqJpPMR4dkmJnPoRFhI9yTg8UpNk2rdFeIf5/CmF0XEiQLx//iBbLa2wYW87Hfjlb/xDGCyVCJQv5ahc4L42i0Wh8cJms/qIWZi6rjoeMb8GUEo5H/4BfbDcN+nUjf9Q9yUQrfEYZV4vV9mEAamafEMBA86KZtL4cJrHkBk81B18U0TbMS3fC8KaJBxNQIDAQABAoIBAQC6vPVqlAfblqgodysPzytGBt99glVUir+c61dgeEQLGEzMjK+yh6Z0Ncp0bpkC0r/YxKLgedF7K5U9k7Gduyb0ZtFVsFeVmdJpEzkJmh09KYsNqHlc2klxMKycBM6gw+egqA885NeWtivoU04K/QsObtmZ8RYMc7J2Sy7rkXMqpEgAF1qr4iIxxs465rZrsoyWJHOg4KiA7zevzkYHtPCv2fYsCYvIGli68+Hk30MumnLwLKM8UsIBUbHKs7M05IXGeXLq1xHfQW26f2BeOzK49hdLyh6jZMphkKiORFn5u0GUs6NQ+XHd+lqFPa9w4yvQTgP6RzxochBn5PH2QW91AoGBAPe3z+i/2xjZQH4ZSQmFd0MVjCLTVDUSFIPhejqKPVv8ZUtBp2X54g+pRTEUGQbHZ/MxpJtB4kEMaMs1wECC2Xltjs9+/3jGoDQlwt2eckUjssmQ3WyxLsvFw1+TWPNHqlxjj0QUC3v2hi9IyDKrBhgQpgo3yeI7i7CWHCYcro6vAoGBAO61BY0mTZJlTkGe7iEatCOqBOvCY38PkbPxIM9P8a5N+W5k0yBk3FaPr+Y9s//oU0aBxSgSF7fQXMGUPY1Gr1Sg9DRLFXMv2MEeAoNgkItXsAi4sjY+raZioJFLyPVf3kLsJ3std0BTbNClBGIY0DOeMirI4Fl+zvxJ1nxv7hdbAoGBALMo3xcAA49SOWG6Gefn/pynLeZWH7YOcIX9grBqIPyxa/Vk85Q+iTA4hZF8bqlHeTgbtGiR2vie5//ozTYbLPy0rzAFMvH//ggZM3mjyhOVQQ6lVm/xKd45Fxe98vxo3Z7aZtifArtSTjROmHSE2vB2wg/rz3hvBpXdy1gJMHqDAoGAC9DSEYaP2GtDUGQ5jVHxEMLds33Pxv5STAHnidt/Lw2VBy3edYAImBBMuKzdOBGb7aWGyND8c5DQxpQ7575T93BwJhaBXU5FAGon3bDt9rfEcuoRiDXaCp5fLFIABIVWTyG5YpOBj6GRhVJlwSVRSPzPpuaClGt+e2Z8Q3SW6HkCgYEA8P14G78tUEg4DM+Dd7Isu7HUjntEJAoIf6YuysDQKoUB72ezSSOyiilWrz2oKmXhc5hFwYGBtQjl4opu98Vur5jZVwedse8H8w9PqsET4RrBY+KrTFx0iDBhsjmIOZ5ExvQwY87KRzaFTaYUyxjCumX/nyOolkDnaV7UY65RcGo=

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-ingress
  namespace: django
  labels:
    app: django
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

spec:
  tls:
  - hosts:
      - django.conectado.local
    secretName: django-secret
  defaultBackend:
    service:
      name: django-service
      port:
        number: 80
  rules:
  - host: django.conectado.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: django-service
            port:
              number: 80

---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: django
  namespace: django
  labels:
    app: django
spec:
  host: django.apps.lagomes.rhbr-lab.com
  to:
    kind: Service
    name: django-service
    weight: 100
  port:
    targetPort: http
  wildcardPolicy: None
status:
  ingress:
    - host: django.apps.lagomes.rhbr-lab.com
      routerName: default
      conditions:
        - type: Admitted
          status: 'True'
      wildcardPolicy: None
      routerCanonicalHostname: router-default.apps.lagomes.rhbr-lab.com
